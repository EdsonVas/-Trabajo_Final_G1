#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Estructura para proyectos de I+D
typedef struct {
    int id;
    char titulo[100];
    char descripcion[200];
    char objetivo[100];
    char estado[20];
    int prioridad; // 1: Alta, 2: Media, 3: Baja
} ProyectoID;

// Declaración de funciones
void registrarProyecto();
void listarProyectos();
void actualizarEstado();
void generarReporte();
void salir();

// Variables globales
ProyectoID proyectos[100]; // Almacena hasta 100 proyectos
int totalProyectos = 0;

// Función principal
int main() {
    int opcion;

    while (1) {
        // Menú principal del módulo
        printf("\n--- Módulo de Investigación y Desarrollo ---\n");
        printf("1. Registrar Proyecto\n");
        printf("2. Listar Proyectos\n");
        printf("3. Actualizar Estado de un Proyecto\n");
        printf("4. Generar Reporte de Proyectos\n");
        printf("5. Salir\n");
        printf("Seleccione una opción: ");
        scanf("%d", &opcion);

        // Opciones del menú
        switch (opcion) {
            case 1:
                registrarProyecto();
                break;
            case 2:
                listarProyectos();
                break;
            case 3:
                actualizarEstado();
                break;
            case 4:
                generarReporte();
                break;
            case 5:
                salir();
                break;
            default:
                printf("Opción no válida. Intente nuevamente.\n");
        }
    }

    return 0;
}

// Función para registrar un proyecto
void registrarProyecto() {
    ProyectoID nuevoProyecto;

    printf("\n--- Registrar Proyecto de I+D ---\n");
    nuevoProyecto.id = totalProyectos + 1;
    printf("Título del proyecto: ");
    scanf(" %[^\n]s", nuevoProyecto.titulo);
    printf("Descripción del proyecto: ");
    scanf(" %[^\n]s", nuevoProyecto.descripcion);
    printf("Objetivo del proyecto: ");
    scanf(" %[^\n]s", nuevoProyecto.objetivo);
    printf("Prioridad (1: Alta, 2: Media, 3: Baja): ");
    scanf("%d", &nuevoProyecto.prioridad);
    strcpy(nuevoProyecto.estado, "Pendiente");

    // Guardar el proyecto
    proyectos[totalProyectos] = nuevoProyecto;
    totalProyectos++;

    printf("Proyecto registrado exitosamente con ID: %d\n", nuevoProyecto.id);
}

// Función para listar proyectos
void listarProyectos() {
    printf("\n--- Lista de Proyectos de I+D ---\n");
    for (int i = 0; i < totalProyectos; i++) {
        printf("ID: %d\n", proyectos[i].id);
        printf("Título: %s\n", proyectos[i].titulo);
        printf("Descripción: %s\n", proyectos[i].descripcion);
        printf("Objetivo: %s\n", proyectos[i].objetivo);
        printf("Estado: %s\n", proyectos[i].estado);
        printf("Prioridad: %s\n", proyectos[i].prioridad == 1 ? "Alta" : (proyectos[i].prioridad == 2 ? "Media" : "Baja"));
        printf("------------------------\n");
    }
}

// Función para actualizar el estado de un proyecto
void actualizarEstado() {
    int id;
    char nuevoEstado[20];

    printf("\n--- Actualizar Estado de un Proyecto ---\n");
    printf("Ingrese el ID del proyecto: ");
    scanf("%d", &id);

    // Buscar el proyecto por ID
    int encontrado = 0;
    for (int i = 0; i < totalProyectos; i++) {
        if (proyectos[i].id == id) {
            encontrado = 1;
            printf("Estado actual: %s\n", proyectos[i].estado);
            printf("Ingrese el nuevo estado (Pendiente, En progreso, Completado): ");
            scanf("%s", nuevoEstado);
            strcpy(proyectos[i].estado, nuevoEstado);
            printf("Estado del proyecto actualizado exitosamente.\n");
            break;
        }
    }

    if (!encontrado) {
        printf("Proyecto con ID %d no encontrado.\n", id);
    }
}

// Función para generar un reporte
void generarReporte() {
    int pendientes = 0, enProgreso = 0, completados = 0;

    printf("\n--- Generar Reporte de Proyectos ---\n");
    for (int i = 0; i < totalProyectos; i++) {
        if (strcmp(proyectos[i].estado, "Pendiente") == 0) {
            pendientes++;
        } else if (strcmp(proyectos[i].estado, "En progreso") == 0) {
            enProgreso++;
        } else if (strcmp(proyectos[i].estado, "Completado") == 0) {
            completados++;
        }
    }

    printf("Total de proyectos: %d\n", totalProyectos);
    printf("Pendientes: %d\n", pendientes);
    printf("En progreso: %d\n", enProgreso);
    printf("Completados: %d\n", completados);
}

// Función para salir del sistema
void salir() {
    printf("\nSaliendo del módulo de I+D. ¡Hasta luego!\n");
    exit(0);
}
